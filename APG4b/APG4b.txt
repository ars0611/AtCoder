'''
1.01
print("hello world", 611, "0822",sep="\n") #改行区切り
print("hello world",end=" ")
print(822) #空白区切り

1.02
print("hello"); print(822) #;で区切ると複数の実行分を一行に記述可 i.e ; = 改行

res = 1 + 2 + 3 + 4\
    + 5 + 6 + 7 + 8
print(res) #\で一つの実行文を複数行に記述可 ()内は,改行でok

1.03
print(9/2) #4.5：実数
print(9//2) #4：整数：8//2など割り切れる場合は//が最適
print(9%2) #1：あまり：絶対自然数やで
print(2**3) #8：べき乗：最も優先度が高い

q, r= divmod(20,7) ##q：商 r：あまり
print(q); print(r) ##2 6

print(100 * (100 + 1)//2) #先頭の1/2を末尾で//2とした

1.04
#int：整数型(多倍長整数：大きさに制限がない) float：浮動小数点型(有効数字15~16桁程度) str：文字列型

x = 10; y = 2 * x
print(x); print(y); print(x + y) #10 20 30 変数はメモ

x = 1.23e5; print(x) #1.23 * 10**5 変数の型の宣言はいらない

x = 2; x += 5 # i.e. x = x + 5 各演算子で同様
print(x)

x, y = 2, 3; x, y = y, x #変数x,y定義->swap
print(x,y)
a, b = 3.2, 2.5; print(a*b) #8.0 float同士はfloatが返る
a, b = 2.5, 4; print(a*b) #10.0 片方floatならfloatが返る
print(2 ** -2) #0.25 指数が負ならfloatが返る

seconds = 365 * 24 * 60 * 60; print(2 * seconds) #2年間は何秒間か

1.05

a = input() #入力を文字列として受け取る
a = int(a) #文字列として受け取った入力を整数に変換
print(a * 10) #入力が5なら50が出力される
a = int(input()) とすることで入力を整数で受け取る 各データ型で同様

s = input() #input()は一行の入力を受け取る->s行受け取る
a = int(input())
print(s, a * 10) # 入力:Hello (改行) 5 -> 出力:Hello 50

a, b, c = input().split() #空白区切りの一行の入力をそれぞれ別の変数に格納
print(a, b, c,sep="\n") #文字列a,b,cを改行して出力 

a, b, c = map(int, input().split()) #空白区切りの入力を整数型で変数a,b,cに格納
split("区切り文字") #ex) ":" 区切り文字指定可能

A, B= map(int, input().split())
print(A + B) #標準入力A Bで与えられた整数の和を返す

1.06
x == y, x != y #xとyが等しい,等しくない

x = int(input())

if x < 10: # if 条件文:
    print("xは 10 より小さい") #if節がtrueのときの処理
elif x > 10: #if節がfalseのときの条件文
    print("xは 10 より小さくない") #elif節がtrueの時の処理
else:
    print("xは 10 と等しい") #elif節がfalseの時の処理

print("終了")

A, op, B = input().split()
A = int(A)
B = int(B)

if op == "+":
    print(A + B)
elif op == "-":
    print(A - B)
elif op == "*":
    print(A * B)
elif op == "/" and B != 0:
    print(A // B)
else:
    print("error")

#電卓 *制約はEX6参照

1.07    

x = 5
a = 0 <= x #aに条件式「xが0以上か」の値を代入(ここではTrue)
b = x <= 10 #bに条件式「xが10以下か」の値を代入(ここではTrue)
c = a and b #cに論理演算式「aかつbか」の値を代入(ここではTrue)
print (a, b, c) #ここではTrue True Trueが出力される
#True Falseはbool型というデータ型の値

x = 0
a = x == 0
if a == True:
    print("真") #こんなんもできちゃう！

#if 数値 ：値が0のときのみFalse
    文字列：空文字列""のときのみFalse
    配列：空[]のときのみFalse
このようにint/str/array型がbool型に変換されることをキャストという

1.08

i = 1
while i<=10:
    print(i,end=" ")
    i +=1
#N回繰り返すときは、i=0を初期値とし、while文の条件式をi<Nとするのが慣習

N = int(input()) #入力の個数N

s = 0 #合計点を表す変数
i = 0 #カウンタ変数

while i<N:
    x = int(input()) #ループのたびに変数xを受け取る
    s += x
    i += 1

print(s)

1.09

for i in range(3): #for 変数 in 回数
    print("Hello for:",i) #Hello for: 0（改行）Hello for: 1（改行）Hello for: 2が出力される

for i in range(5):
    if i == 2:
        print('ぬける')
        break #if文がTrueのときループを抜ける *continueのときは処理をとばして次のループへ
    print(i) # 0 1 ぬける と改行で出力される
#range(初期値,<の値,増分)としてもよい。初期値から増分ずつ<値の間繰り返す
#for,while文にはelseをつかえる。elseの処理が行われる条件はforがbreakしなかったとき
#EX9の解説参照。俺のはくそコード。DRY!

1.10

a = [3, 1, 4, 1, 5] #listを作りaに代入
a = [] #空のlistを作成
a = list(range(5)) #list[0, 1, 2, 3, 4]を作成
print(a[0]) #0番目の要素を出力
a[0] = 0 #a[0]の要素を0に変更
print(len(a)) #aの長さを出力

for i in a:
    print(i) #aの要素を順に出力

a = list(map(int,input().split())) #空白区切りの一行の入力をlistに。
print(*a) #aの要素を空白区切りで出力。for文やと改行

N = int(input()) #生徒の人数
Math = list(map(int, input().split())) #生徒iの数学の得点
Eng = list(map(int, input().split())) #生徒iの英語の得点
Sum = [] #生徒iの合計点
for i in range(N):
    Sum[i] = Math[i] + Eng[i]
    print(Sum[i])

#負の添え字iで末尾から要素を得る
#list同士、+で末尾に結合、*で繰り返しを行える
a.append(3) #aの末尾に3を追加
a.pop(i) #a[i]を得ながら削除
print(a.pop()) #末尾を出力し、削除
a.insert(i, x) #a[i-1]とa[i]の間にxを挿入
print(x in a) #aの要素にxがあるか判定
print(a.count(x)) #a中のxの数をカウント
print(a.index(1)) #a中に存在する最初の1の位置を調べる
a.sort() #aを昇順に並び替え
a.reverse() #aを反転

b = a.copy() #list aの複製をbに代入 *b=aとするとその後b.appendとかするとなぜかaも変わってまうので注意

print(a[1:4]) #a[1]からa[4]までの要素からなるlistをつくる 
#1:5:2とするとa[1:5]から2要素ずつ取り出したlistになる

1.11
a = "ABCDEF" #aに文字列を代入
print(a[0]) #A ：文字列を配列と同一視

#\n:改行 \":" \':' \\:\ \t:水平タブ ：文字列につかいたいときはこれ
print("Hello\nAtCoder")

s = "AtCoder"
for i in s:
    print(i) #一文字ずつ改行して出力

#intやstrを用いて整数を文字列にしたりそれの逆をしたりできる

a ="1 23 456".split() #空白文字で区切りlistに
print(" + ".join(a)) #" + "でlistを結合して文字列に
print(s[::-1]) #文字列sを逆順にした文字列を出力

#部分文字列における.count("文字列")は重ならないように数える
print("1 + 2 + 3".replace("+", "*")) #+を*に書き換え
print("atcoder.islower()") #True 小文字からなる。.isupper()で大文字版判定
#.isdigit() ：空でなくすべて数字か判定
#.upper() , .lower()で変換した文字列を得る

ord(c)でcのコードポイントを、chr(97)でコードポイント97の文字を得る
数字、大文字、小文字とコードポイントが大きくなる
ord(C) - ord("A") #Cは何番目のアルファベットであるか
chr(ord("A") + i) #i番目のアルファベットを得る

1.12

abs(a) #aの絶対値を返す
pow(a,b) #aのb乗を返す (a,b mod)でmodで割った余りを返す
min(a, b, c) #最小値を返す。maxで最大値 listにもつかえる
sum(l) #list lに含まれる値の合計を返す
sorted(l) #list lをソートしたものを返す。lはもとのまま

l = [1, 3, -5, 2]
res = all([v>0 for v in l]) # false lの値はすべて正か？
res2 = any([v%2 == o for v in l]) # true lに偶数は含まれるか？

for i,v in enumerate(l):
print(i, "番目の要素は", v, "です") #添え字と値を同時に得る

1.13

def 関数名(パラメータ):
    処理
return文が行われたらそれ以降の処理は行われない
関数内で使用した変数はそこ以外で使えない
使いたければglabal パラメータとする

2.02
flag変数のTFでif文でbreakやんのいいね。for文を関数と定義してreturnもいいね。

2.03
l = [i*i for i in range(5)] #[0, 1, 4, 9, 16]が出力 i.e.要素がi*i 内包表現
l_only_even = [v for v in l if v%2==0] #if文ぶち込める

xs = [1, 2, 3]; ys = ["a", "b", "c"]
xys = [[x, y] for x in xs for y in ys] #多重ループもいけてまう！


n = 4
root_n = math.sqrt(n)
print(root_n)
print(root_n.is_integer()) #平方根の計算と整数判定

N, M = map(int, input().split())
a = []
for i in range(N):
    a.append(list(map(int, input().split()))) #n行m列の配列a 

ようは配列を要素に持つはいれつであって、要素番号は行数を表す

ひたすら内包表現使ってくれ、ほんまに。
'''
